/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// Function sql , storeProceduce
package view;

import color.Color;
import conn.ConnectionToDatabase;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.xml.ws.Service;
import model.NguoiDung;
import model.PhanQuyen;
import model.ServiceModel;
import model.TaiKhoan;
import quanlydakl.BangGiaoVien;

/**
 *
 * @author Admin
 */
public class LoginFrame2 extends javax.swing.JFrame {

    int xx;
    int yy;
    private String tenDangNhap, matKhau;
    private int loai;

    public String getTenDangNhap() {
        return tenDangNhap;
    }

    public void setTenDangNhap(String tenDangNhap) {
        this.tenDangNhap = tenDangNhap;
    }

    public String getMatKhau() {
        return matKhau;
    }

    public void setMatKhau(String matKhau) {
        this.matKhau = matKhau;
    }

    public int getLoai() {
        return loai;
    }

    public void setLoai(int loai) {
        this.loai = loai;
    }

    /**
     * Creates new form LoginFrame2
     */
    private TaiKhoan taiKhoan;
    private NguoiDung nguoiDung;
    public LoginFrame2() {
        initComponents();
        // ngay từ lúc đầu đã load tất cả giáo viên rồi
        // nó không cho phép sao chép dữ liệu giống nhau vào bảng nhé
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // Insert dữ liệu từ bảng giảng viên sang bảng login
    // mật khẩu và pass word của giáo viên đều là mã giảng viên
    // Thêm 1 trường thay đổi mật khẩu --> Lưu vào đâu login --> loại 1 và loại 2
    private void InsertTeachertoLogin(){
        // kết nối cơ sở dữ liệu
        Connection conn=ConnectionToDatabase.getJDBCConnection();
        String sql="SELECT maGiangVien FROM quanlyphancongdakl.giangvien";
        Statement st,st1;
        ResultSet rs;
        String MagiangVien="";
        String loai="0";
        try {
            st=conn.createStatement();
            rs=st.executeQuery(sql);
            while(rs.next()){
                MagiangVien=rs.getString("maGiangVien");
                // insert Toàn bộ dữ liệu zo bảng
                String sql1="INSERT INTO `quanlyphancongdakl`.`login`"
                        + " (`tenDangNhap`, `matKhau`, `loai`) "
                        + "VALUES ('"+MagiangVien+"', '"+MagiangVien+"', '"+loai+"')";
                st1=conn.createStatement();
                // Update Dữ liệu thành công
                if(st1.executeUpdate(sql1)==1){
                    System.out.println("Updated "+MagiangVien+" Vào bảng Login....");
                }               
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void DeleteAllGiangVien(){
        // Câu lệnh này thành công khi phải có 1 ảo
        Connection conn=ConnectionToDatabase.getJDBCConnection();
        String sql2="delete from login\n" +
        "where tenDangNhap!='admin'";
        Statement st2;
        ResultSet rs;
        try {
            st2=conn.createStatement();
            int a=st2.executeUpdate(sql2);
            if(a<1){
                System.out.println("Deleted no Successfully");
            }
            else{
                InsertTeachertoLogin();
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel(){
        };
        jLabel4 = new javax.swing.JLabel();
        ThoatBTN = new javax.swing.JButton();
        dangNhapBTN = new javax.swing.JButton();
        tenTaiKhoanTF = new javax.swing.JTextField();
        jUsername = new javax.swing.JLabel();
        jPw = new javax.swing.JLabel();
        matKhauTF = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        closeLB = new javax.swing.JLabel();
        mininumLB = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Đăng nhập hệ thống");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(500, 20));
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(Color.MAINCOLOR);
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel2MouseReleased(evt);
            }
        });

        jPanel1.setOpaque(false);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/man.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ThoatBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ThoatBTN.setText("THOÁT");
        ThoatBTN.setAlignmentX(0.5F);
        ThoatBTN.setHideActionText(true);
        ThoatBTN.setMaximumSize(new java.awt.Dimension(105, 30));
        ThoatBTN.setMinimumSize(new java.awt.Dimension(105, 30));
        ThoatBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThoatBTNActionPerformed(evt);
            }
        });

        dangNhapBTN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dangNhapBTN.setText("ĐĂNG NHẬP");
        dangNhapBTN.setMaximumSize(new java.awt.Dimension(105, 30));
        dangNhapBTN.setMinimumSize(new java.awt.Dimension(105, 30));
        dangNhapBTN.setPreferredSize(new java.awt.Dimension(105, 40));
        dangNhapBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangNhapBTNActionPerformed(evt);
            }
        });
        dangNhapBTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dangNhapBTNKeyPressed(evt);
            }
        });

        tenTaiKhoanTF.setBackground(Color.MAINCOLOR);
        tenTaiKhoanTF.setForeground(new java.awt.Color(255, 255, 255));
        tenTaiKhoanTF.setText("admin");
        tenTaiKhoanTF.setBorder(null);
        tenTaiKhoanTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenTaiKhoanTFActionPerformed(evt);
            }
        });
        tenTaiKhoanTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tenTaiKhoanTFKeyPressed(evt);
            }
        });

        jUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jUsername.setForeground(new java.awt.Color(255, 255, 255));
        jUsername.setText("TÊN TÀI KHOẢN");

        jPw.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPw.setForeground(new java.awt.Color(255, 255, 255));
        jPw.setText("MẬT KHẨU");

        matKhauTF.setBackground(Color.MAINCOLOR);
        matKhauTF.setForeground(new java.awt.Color(255, 255, 255));
        matKhauTF.setText("123456");
        matKhauTF.setBorder(null);
        matKhauTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matKhauTFActionPerformed(evt);
            }
        });
        matKhauTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                matKhauTFKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setOpaque(true);

        closeLB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/close.png"))); // NOI18N
        closeLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLBMouseClicked(evt);
            }
        });

        mininumLB.setForeground(new java.awt.Color(255, 255, 255));
        mininumLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mininumLB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/minimumpng.png"))); // NOI18N
        mininumLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mininumLBMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPw)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matKhauTF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tenTaiKhoanTF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mininumLB)
                        .addGap(10, 10, 10)
                        .addComponent(closeLB)
                        .addGap(16, 16, 16))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dangNhapBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(ThoatBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ThoatBTN, dangNhapBTN});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jUsername))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mininumLB)
                                    .addComponent(closeLB))))
                        .addGap(10, 10, 10)
                        .addComponent(tenTaiKhoanTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPw)
                        .addGap(10, 10, 10)
                        .addComponent(matKhauTF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dangNhapBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ThoatBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ThoatBTN, dangNhapBTN});

        dangNhapBTN.getAccessibleContext().setAccessibleName("abc");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private TaiKhoan getTaiKhoan() {
        TaiKhoan tk = new TaiKhoan(tenTaiKhoanTF.getText(), matKhauTF.getText());
        return tk;
    }
    private void closeLBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLBMouseClicked
        thoatLogin();
    }//GEN-LAST:event_closeLBMouseClicked

    private void mininumLBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mininumLBMouseClicked
        this.setState(ICONIFIED);

    }//GEN-LAST:event_mininumLBMouseClicked

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        setOpacity(0.8f);
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - yy);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseReleased
        setOpacity(1.0f);
    }//GEN-LAST:event_jPanel2MouseReleased

    private void matKhauTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_matKhauTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                dangNhap();
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_matKhauTFKeyPressed

    private void tenTaiKhoanTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tenTaiKhoanTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                dangNhap();
            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tenTaiKhoanTFKeyPressed

    private void ThoatBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThoatBTNActionPerformed
        thoatLogin();
    }//GEN-LAST:event_ThoatBTNActionPerformed

    private void dangNhapBTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dangNhapBTNKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            try {
//                dangNhap();
//            } catch (SQLException ex) {
//                Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_dangNhapBTNKeyPressed

    private void dangNhapBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangNhapBTNActionPerformed
        try {
            dangNhap();
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dangNhapBTNActionPerformed
    
    private void checkAcc() {
        try {
            String blankQuery = "call dangNhap('%s', '%s')";
            String sqlQuery = String.format(blankQuery,
                    tenTaiKhoanTF.getText(),
                    matKhauTF.getText());
                    
            
            ResultSet rs = ServiceModel.getResultSetFromSQLQuery(sqlQuery, "dang nhap");
            ResultSetMetaData mt = rs.getMetaData();
            int numberOfColumn = mt.getColumnCount();
            
            // Lay kiem tra loai tai khoan: 0 ko co, 1 admin, 2 giang vien
            int typeAcc = 0;
            while (rs.next()) {
                typeAcc = (int) rs.getObject(1);
            }
            
            if (typeAcc == 0) {
                JOptionPane.showMessageDialog(rootPane, "Tài khoản hoặc mật khẩu không đúng");
            } else if (typeAcc == 1) {
                JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                Main3 frame = new Main3("admin", 1);
                frame.maNguoiDung = "admin";                
                frame.matKhau =  matKhauTF.getText();
                frame.setVisible(true);
                this.dispose();
                
            } else {
                JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                Main3 frame = new Main3(tenTaiKhoanTF.getText(), 2);
                frame.maNguoiDung = tenTaiKhoanTF.getText();
                frame.matKhau =  matKhauTF.getText();
                frame.setVisible(true);
                this.dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private boolean checkEmpty(JTextField tfField, String value, String field) {
        if (value.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Xin nhập vào " + field, "Field Empty", JOptionPane.ERROR_MESSAGE);
            tfField.requestFocus();
            return false;
        }
        return true;
    }
    private void dangNhap() throws SQLException {
        String stTenTaiKhoan = tenTaiKhoanTF.getText();
        // Kiểm tra xem thông tin tài khoản có rỗng hay k ??
        if (!checkEmpty(tenTaiKhoanTF, stTenTaiKhoan, "tên tài khoản")) {
            return;
        }
        String stMauKhau = matKhauTF.getText();
        if (!checkEmpty(matKhauTF, stMauKhau, "mật khẩu")) {
            return;
        }
        checkAcc();

    }
    private void tenTaiKhoanTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenTaiKhoanTFActionPerformed
        matKhauTF.requestFocus();
    }//GEN-LAST:event_tenTaiKhoanTFActionPerformed

    private void matKhauTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matKhauTFActionPerformed
        dangNhapBTN.doClick();
    }//GEN-LAST:event_matKhauTFActionPerformed
    private void thoatLogin() {
        System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ThoatBTN;
    private javax.swing.JLabel closeLB;
    private javax.swing.JButton dangNhapBTN;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jPw;
    private javax.swing.JLabel jUsername;
    private javax.swing.JPasswordField matKhauTF;
    private javax.swing.JLabel mininumLB;
    private javax.swing.JTextField tenTaiKhoanTF;
    // End of variables declaration//GEN-END:variables
}
